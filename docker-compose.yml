volumes:
  postgres-data:
    driver: local

networks:
  carica-bridge:
    driver: bridge

services:
  haproxy:
    image: haproxy:3.1.0-alpine
    ports: 
    - "${HTTP_BIND}:80"
    - "${HTTPS_BIND}:443"
    networks: [carica-bridge]
    volumes: 
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg 
      - ./config/cert.pem:/cert/cert.pem
    env_file: ./config/haproxy.env

  carica-ui:
    image: ghcr.io/centaurin/carica:latest
    volumes: 
      - ./config/carica-ui.env:/app/.env
    networks: [carica-bridge]
    depends_on:
      postgres:
        condition: service_started
    environment: 
      ORIGIN: ${DOMAIN_NAME}

  carica-ml:
    image: ghcr.io/centaurin/carica-ml:latest
    networks: [carica-bridge]

  postgres:
    image: postgres
    networks: [carica-bridge]
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
